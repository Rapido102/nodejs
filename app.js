require('dotenv').config();
const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const logger = require('morgan');
const bodyParser = require('body-parser');
const cors = require('cors');
const middleware = require('./utils/middleware');
const mongoose = require('mongoose');
const crypto = require('crypto');
const swaggerUi = require('swagger-ui-express');
const swaggerJsdoc = require('swagger-jsdoc');
//_____________________________________________________________________________________
const indexRouter = require('./routes/index');
const notesRouter = require('./controllers/notes');
const usersRouter = require('./controllers/users');
const loginRouter = require('./controllers/login');
const benchRouter = require('./controllers/bench');
//_____________________________________________________________________________________
const app = express();
const options = {
    swaggerDefinition: {
        // Like the one described here: https://swagger.io/specification/#infoObject
        info: {
            title: 'Test API',
            version: '1.0.0',
            description: 'Test Express API with autogenerated swagger doc',
        },
    },
    // List of files to be processes. You can also set globs './routes/*.js'
    apis: ['./controllers/*.js'],
};

const specs = swaggerJsdoc(options);

/*const fs = require("fs");
const stream = fs.createWriteStream("specs.json2");
stream.write(JSON.stringify(specs));
*/
//_____________________________________________________________________________________
// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');
//_____________________________________________________________________________________
mongoose.set('useFindAndModify', false);
//_____________________________________________________________________________________
//mongoose.set('debug', true)
//_____________________________________________________________________________________
app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({extended: false}));
app.use(cookieParser());
app.use(express.static('build'));

app.use(middleware.requestLogger);
app.use(cors());
//___________________________________________________________________________
app.use('/', indexRouter);
app.use('/api/users', usersRouter);
app.use('/api/notes', notesRouter);
app.use('/api/bench', benchRouter);
app.use('/api/login', loginRouter);
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));
//_____________________________________________________________________________________

// catch 404 and forward to error handler
app.use(function (req, res, next) {
    next(createError(404));
});
// error handler
app.use(function (err, req, res, next) {
    // set locals, only providing error in development
    res.locals.message = err.message;
    res.locals.error = req.app.get('env') === 'development' ? err : {};

    // render the error page
    res.status(err.status || 500);
    res.render('error');
});
app.use(bodyParser.json());
//_____________________________________________________________________________________
app.use(middleware.unknownEndpoint)
app.use(middleware.errorHandler)

//_____________________________________________________________________________________
module.exports = app;

